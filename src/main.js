/**
 * Main application entry point - Simple Integration
 */

import { 
  calcLifePath, 
  calcExpression, 
  calcSoulUrge, 
  calcPersonality, 
  calcBirthday, 
  calcMaturity, 
  calcPersonalYear,
  calcPinnaclesChallenges,
  calcKarmicLessons,
  calcPersonalMonth,
  calcPersonalDay,
  calcPersonalCycles,
  calcHiddenPassion,
  calcIntensityNumbers,
  calcPlanesOfExpression,
  calcLifePathPeriods,
  calcCompatibility,
  calcPersonalForecast
} from './numerology.js';

// Import advanced modules
import { CRYSTAL_NUMEROLOGY } from './crystal-numerology.js';
import { COLOR_NUMEROLOGY } from './color-numerology.js';
import { CAREER_NUMEROLOGY } from './career-numerology.js';
import { FENG_SHUI_NUMEROLOGY, COSMIC_CALCULATIONS } from './feng-shui-numerology.js';

import { 
  readOptionsFromUI, 
  renderResults, 
  renderPinnaclesChallenges,
  renderEnhancedFeatures,
  validateForm,
  hideResults,
  setupAccordion,
  setupOptionsToggle,
  toast
} from './ui.js';

/**
 * Calculate all numerology values
 */
function calculateAll(name, date, options) {
  const lifePath = calcLifePath(date, options);
  const expression = calcExpression(name, options);
  const soulUrge = calcSoulUrge(name, options);
  const personality = calcPersonality(name, options);
  const birthday = calcBirthday(date, options);
  const maturity = calcMaturity(lifePath.value, expression.value, options);
  const personalYear = calcPersonalYear(date, new Date(), options);
  
  // Enhanced calculations
  const karmicLessons = calcKarmicLessons(name, options);
  const personalMonth = calcPersonalMonth(date, new Date(), options);
  const personalDay = calcPersonalDay(date, new Date(), options);
  const personalCycles = calcPersonalCycles(date, new Date(), 12, options);
  const hiddenPassion = calcHiddenPassion(name, options);
  const intensityNumbers = calcIntensityNumbers(name, options);
  const planesOfExpression = calcPlanesOfExpression(name, options);
  const lifePathPeriods = calcLifePathPeriods(date, new Date(), options);
  
  // Advanced features
  const crystalInfo = CRYSTAL_NUMEROLOGY[lifePath.value] || {};
  const colorInfo = COLOR_NUMEROLOGY[lifePath.value] || {};
  const careerInfo = CAREER_NUMEROLOGY.life_path_careers[lifePath.value] || {};
  
  // Debug log
  console.log(`Debug Advanced Features:`, {
    lifePathValue: lifePath.value,
    hasColorInfo: !!colorInfo.primary_colors,
    hasCrystalInfo: !!crystalInfo.crystals,
    hasCareerInfo: !!careerInfo.ideal_careers,
    colorData: colorInfo,
    crystalData: crystalInfo,
    careerData: careerInfo
  });
  
  const dateString = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;
  const fengShuiNumber = COSMIC_CALCULATIONS.calcPersonalFengShuiNumber(dateString);
  const directionalLuck = COSMIC_CALCULATIONS.calcDirectionalLuck(lifePath.value);
  
  return {
    // Core numbers
    lifePath,
    expression,
    soulUrge,
    personality,
    birthday,
    maturity,
    personalYear,
    
    // Enhanced features
    karmicLessons,
    personalMonth,
    personalDay,
    personalCycles,
    hiddenPassion,
    intensityNumbers,
    planesOfExpression,
    lifePathPeriods,
    
    // Advanced features
    crystalInfo,
    colorInfo,
    careerInfo,
    fengShuiNumber,
    directionalLuck
  };
}

/**
 * Handle form submission
 */
function handleSubmit(event) {
  event.preventDefault();
  
  hideResults();
  
  const validation = validateForm();
  if (!validation) return;
  
  const { selectedName, date } = validation;
  const options = readOptionsFromUI();
  
  try {
    const results = calculateAll(selectedName, date, options);
    
    renderResults(results);
    
    if (options.pinnaclesChallenges) {
      const pinnaclesData = calcPinnaclesChallenges(date, options);
      renderPinnaclesChallenges(pinnaclesData);
    }
    
    renderEnhancedFeatures(results);
    
    // Show advanced features
    showAdvancedFeatures(results);
    
    toast('T√≠nh to√°n th√†nh c√¥ng!', 'success');
    
  } catch (error) {
    console.error('L·ªói t√≠nh to√°n:', error);
    toast('C√≥ l·ªói x·∫£y ra khi t√≠nh to√°n. Vui l√≤ng th·ª≠ l·∫°i.');
  }
}

/**
 * Show advanced features
 */
function showAdvancedFeatures(results) {
  const advancedContainer = document.getElementById('advanced-features');
  if (!advancedContainer) return;
  
  advancedContainer.innerHTML = `
    <div class="advanced-content">
      <h2>‚ú® Advanced Features</h2>
      
      <div class="advanced-tabs">
        <div class="tab-buttons">
          <button class="tab-btn active" data-tab="crystal">üîÆ Crystal</button>
          <button class="tab-btn" data-tab="color">üåà Color</button>
          <button class="tab-btn" data-tab="career">üíº Career</button>
          <button class="tab-btn" data-tab="fengshui">üè† Feng Shui</button>
        </div>
        
        <div class="tab-content">
          <div class="tab-panel active" id="crystal-panel">
            ${renderCrystalContent(results.crystalInfo, results.lifePath.value)}
          </div>
          <div class="tab-panel" id="color-panel">
            ${renderColorContent(results.colorInfo, results.lifePath.value)}
          </div>
          <div class="tab-panel" id="career-panel">
            ${renderCareerContent(results.careerInfo, results.lifePath.value)}
          </div>
          <div class="tab-panel" id="fengshui-panel">
            ${renderFengShuiContent(results.fengShuiNumber, results.directionalLuck)}
          </div>
        </div>
      </div>
    </div>
  `;
  
  setupAdvancedTabs();
  advancedContainer.style.display = 'block';
}

/**
 * Render crystal content
 */
function renderCrystalContent(crystalInfo, lifePathNumber) {
  if (!crystalInfo.crystals) {
    return `<p>üîÆ Th√¥ng tin crystal cho Life Path ${lifePathNumber} ƒëang ƒë∆∞·ª£c c·∫≠p nh·∫≠t...</p>`;
  }
  
  return `
    <div class="crystal-content">
      <h3>üîÆ H∆∞·ªõng D·∫´n ƒê√° Qu√Ω cho Life Path ${lifePathNumber}</h3>
      
      <div class="crystal-grid">
        ${crystalInfo.crystals.map((crystal, index) => `
          <div class="crystal-item">
            <h4>‚ú® ${crystal}</h4>
            <p><strong>üè∑Ô∏è √ù nghƒ©a:</strong> ${crystalInfo.vietnamese?.[index] || crystal}</p>
            <p><strong>üåü ƒê·∫∑c t√≠nh:</strong> ${crystalInfo.properties?.[index] || 'N√¢ng cao nƒÉng l∆∞·ª£ng t√¢m linh'}</p>
          </div>
        `).join('')}
      </div>
      
      <div class="chakra-section">
        <h4>üåà C√¢n B·∫±ng Chakra</h4>
        <p><strong>üéØ Chakra ch√≠nh:</strong> ${crystalInfo.chakra || 'NƒÉng l∆∞·ª£ng v≈© tr·ª•'}</p>
        <p><strong>üé® M√†u s·∫Øc h·ªó tr·ª£:</strong> ${crystalInfo.colors?.join(', ') || 'ƒêa s·∫Øc m√†u'}</p>
      </div>
      
      <div class="meditation-section">
        <h4>üßò‚Äç‚ôÄÔ∏è H∆∞·ªõng D·∫´n Thi·ªÅn</h4>
        <p><strong>üéØ C√°ch th·ª±c h√†nh:</strong> ${crystalInfo.meditation || 'C·∫ßm ƒë√° qu√Ω trong tay khi thi·ªÅn ƒë·ªÉ tƒÉng c∆∞·ªùng k·∫øt n·ªëi t√¢m linh'}</p>
        <p><strong>üìç C√°ch s·ª≠ d·ª•ng:</strong> ${crystalInfo.placement || 'ƒê·ªÉ ƒë√° qu√Ω ·ªü kh√¥ng gian c√° nh√¢n ƒë·ªÉ duy tr√¨ nƒÉng l∆∞·ª£ng t√≠ch c·ª±c'}</p>
        ${crystalInfo.daily_use ? `<p><strong>üí° S·ª≠ d·ª•ng h√†ng ng√†y:</strong> ${crystalInfo.daily_use}</p>` : ''}
        ${crystalInfo.cleansing ? `<p><strong>üåä L√†m s·∫°ch nƒÉng l∆∞·ª£ng:</strong> ${crystalInfo.cleansing}</p>` : ''}
      </div>
      
      <div class="compatibility-section">
        <h4>üîó T∆∞∆°ng Th√≠ch S·ªë H·ªçc</h4>
        <p><strong>‚úÖ T∆∞∆°ng th√≠ch v·ªõi:</strong> ${crystalInfo.compatible_numbers?.join(', ') || 'T·∫•t c·∫£ c√°c s·ªë'}</p>
        <p><strong>‚ö†Ô∏è N√™n tr√°nh v·ªõi:</strong> ${crystalInfo.avoid_with?.join(', ') || 'Kh√¥ng c√≥'}</p>
      </div>
    </div>
  `;
}

/**
 * Render color content
 */
function renderColorContent(colorInfo, lifePathNumber) {
  if (!colorInfo.primary_colors) {
    return `<p>Th√¥ng tin color cho Life Path ${lifePathNumber} ƒëang ƒë∆∞·ª£c c·∫≠p nh·∫≠t...</p>`;
  }
  
  // Color names mapping
  const colorNames = {
    '#FF0000': 'ƒê·ªè Quy·ªÅn L·ª±c', '#DC143C': 'ƒê·ªè Th·∫´m', '#B22222': 'ƒê·ªè L·ª≠a',
    '#FFB6C1': 'H·ªìng D·ªãu D√†ng', '#FFC0CB': 'H·ªìng Nh·∫°t', '#F0E68C': 'V√†ng Khaki',
    '#FF4500': 'Cam S√°ng', '#FF6347': 'Cam C√† Chua', '#FFA500': 'Cam V√†ng',
    '#FFFF00': 'V√†ng R·ª±c', '#FFD700': 'V√†ng Kim', '#F0E68C': 'V√†ng Khaki',
    '#008000': 'Xanh L√°', '#32CD32': 'Xanh Lime', '#00FF00': 'Xanh Neon',
    '#0000FF': 'Xanh D∆∞∆°ng', '#4169E1': 'Xanh Ho√†ng Gia', '#1E90FF': 'Xanh S√¢u',
    '#800080': 'T√≠m ƒê·∫≠m', '#9370DB': 'T√≠m V√†ng', '#DDA0DD': 'T√≠m Nh·∫°t'
  };
  
  return `
    <div class="color-content">
      <h3>üåà Color Therapy cho Life Path ${lifePathNumber}</h3>
      <div class="color-grid">
        ${colorInfo.primary_colors.map(colorHex => `
          <div class="color-item" style="background: linear-gradient(135deg, ${colorHex} 0%, ${colorHex}AA 100%)">
            <h4>${colorNames[colorHex] || 'M√†u ƒê·∫∑c Bi·ªát'}</h4>
            <p style="color: white; text-shadow: 1px 1px 2px rgba(0,0,0,0.8);">${colorHex}</p>
          </div>
        `).join('')}
      </div>
      <div class="feng-shui-section">
        <h4>üè† Feng Shui Applications</h4>
        <p><strong>Direction:</strong> ${colorInfo.feng_shui?.direction || 'Multi-directional'}</p>
        <p><strong>Element:</strong> ${colorInfo.feng_shui?.element || 'Universal'}</p>
        <p><strong>Best Rooms:</strong> ${colorInfo.feng_shui?.best_rooms?.join(', ') || 'Living areas'}</p>
      </div>
      <div class="color-tips">
        <h4>Daily Applications</h4>
        <ul>
          ${colorInfo.psychology?.when_to_use?.map(tip => `<li>${tip}</li>`).join('') || '<li>Use your power colors in clothing and decor</li>'}
        </ul>
      </div>
    </div>
  `;
}

/**
 * Render career content
 */
function renderCareerContent(careerInfo, lifePathNumber) {
  if (!careerInfo.ideal_careers) {
    return `<p>üíº Th√¥ng tin ngh·ªÅ nghi·ªáp cho Life Path ${lifePathNumber} ƒëang ƒë∆∞·ª£c c·∫≠p nh·∫≠t...</p>`;
  }
  
  return `
    <div class="career-content">
      <h3>üíº H∆∞·ªõng D·∫´n S·ª± Nghi·ªáp cho Life Path ${lifePathNumber}</h3>
      
      <div class="career-section">
        <h4>üéØ Ngh·ªÅ Nghi·ªáp L√Ω T∆∞·ªüng</h4>
        <div class="career-tags">
          ${careerInfo.ideal_careers.slice(0, 6).map(career => `
            <span class="career-tag">${career}</span>
          `).join('')}
        </div>
      </div>
      
      <div class="business-section">
        <h4>üè¢ Lo·∫°i H√¨nh Kinh Doanh Ph√π H·ª£p</h4>
        <div class="business-grid">
          ${careerInfo.business_types?.slice(0, 4).map(business => `
            <div class="business-item">${business}</div>
          `).join('') || '<div class="business-item">ƒêa d·∫°ng lo·∫°i h√¨nh kinh doanh</div>'}
        </div>
      </div>
      
      <div class="financial-section">
        <h4>üí∞ H·ªì S∆° T√†i Ch√≠nh</h4>
        <div class="financial-grid">
          <div class="financial-item">
            <strong>üíæ Xu h∆∞·ªõng ti·∫øt ki·ªám:</strong> 
            <p>${careerInfo.money_management?.saving_tendency || 'C√¢n b·∫±ng gi·ªØa ti·∫øt ki·ªám v√† ƒë·∫ßu t∆∞'}</p>
          </div>
          <div class="financial-item">
            <strong>üìà Phong c√°ch ƒë·∫ßu t∆∞:</strong> 
            <p>${careerInfo.money_management?.investment_style || 'Danh m·ª•c ƒë·∫ßu t∆∞ ƒëa d·∫°ng'}</p>
          </div>
        </div>
      </div>
      
      <div class="strengths-section">
        <h4>üí™ ƒêi·ªÉm M·∫°nh T√†i Ch√≠nh</h4>
        <ul>
          ${careerInfo.financial_strengths?.slice(0, 3).map(strength => `<li>${strength}</li>`).join('') || '<li>Kh·∫£ nƒÉng qu·∫£n l√Ω t√†i ch√≠nh hi·ªáu qu·∫£</li>'}
        </ul>
      </div>
      
      <div class="tips-section">
        <h4>üöÄ L·ªùi Khuy√™n X√¢y D·ª±ng T√†i S·∫£n</h4>
        <ul>
          ${careerInfo.wealth_building_tips?.slice(0, 3).map(tip => `<li>${tip}</li>`).join('') || '<li>T·∫≠p trung v√†o k·∫ø ho·∫°ch t√†i ch√≠nh d√†i h·∫°n</li>'}
        </ul>
      </div>
    </div>
  `;
}

/**
 * Render feng shui content
 */
function renderFengShuiContent(fengShuiNumber, directionalLuck) {
  // Debug logging
  console.log('üîç Debug Feng Shui:', {
    fengShuiNumber,
    directionalLuck,
    hasFengShuiData: !!FENG_SHUI_NUMEROLOGY,
    hasHouseAnalysis: !!FENG_SHUI_NUMEROLOGY?.house_number_analysis,
    availableNumbers: Object.keys(FENG_SHUI_NUMEROLOGY?.house_number_analysis || {})
  });

  // Import th√¥ng tin s·ªë nh√† t·ª´ FENG_SHUI_NUMEROLOGY
  const houseData = FENG_SHUI_NUMEROLOGY?.house_number_analysis?.[fengShuiNumber];
  
  console.log('üè† House Data for number', fengShuiNumber, ':', houseData);
  
  if (!houseData) {
    return `
      <div class="fengshui-content">
        <h3>üè† Phong Th·ªßy & NƒÉng l∆∞·ª£ng V≈© tr·ª•</h3>
        <p>‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu phong th·ªßy cho s·ªë ${fengShuiNumber}</p>
        <p>üìä Debug: Numbers available: ${Object.keys(FENG_SHUI_NUMEROLOGY?.house_number_analysis || {}).join(', ')}</p>
      </div>
    `;
  }

  return `
    <div class="fengshui-content">
      <h3>üè† Phong Th·ªßy & NƒÉng l∆∞·ª£ng V≈© tr·ª•</h3>
      
      <div class="fengshui-number">
        <h4>üî¢ S·ªë Phong Th·ªßy C√° nh√¢n: ${fengShuiNumber}</h4>
        <div class="energy-type">
          <strong>‚ö° Lo·∫°i nƒÉng l∆∞·ª£ng:</strong> ${houseData.energy_type}
        </div>
        <div class="personality">
          <strong>üè† T√≠nh c√°ch ng√¥i nh√†:</strong> ${houseData.personality}
        </div>
        <div class="feng-shui-meaning">
          <strong>üß≠ √ù nghƒ©a phong th·ªßy:</strong> ${houseData.feng_shui_meaning}
        </div>
      </div>

      <div class="house-analysis">
        <div class="best-for">
          <h4>‚úÖ Ph√π h·ª£p cho:</h4>
          <ul>
            ${houseData.best_for.map(item => `<li>${item}</li>`).join('')}
          </ul>
        </div>

        <div class="challenges">
          <h4>‚ö†Ô∏è Th√°ch th·ª©c:</h4>
          <ul>
            ${houseData.challenges.map(item => `<li>${item}</li>`).join('')}
          </ul>
        </div>

        <div class="remedies">
          <h4>üîß Gi·∫£i ph√°p phong th·ªßy:</h4>
          <ul>
            ${houseData.feng_shui_remedies.map(item => `<li>${item}</li>`).join('')}
          </ul>
        </div>
      </div>

      <div class="colors-elements">
        <div class="lucky-colors">
          <h4>üçÄ M√†u may m·∫Øn:</h4>
          <div class="color-tags">
            ${houseData.lucky_colors.map(color => `<span class="color-tag lucky">${color}</span>`).join('')}
          </div>
        </div>

        <div class="unlucky-colors">
          <h4>üö´ M√†u n√™n tr√°nh:</h4>
          <div class="color-tags">
            ${houseData.unlucky_colors.map(color => `<span class="color-tag unlucky">${color}</span>`).join('')}
          </div>
        </div>

        <div class="element-direction">
          <div class="element">
            <strong>üåü Ng≈© h√†nh:</strong> ${houseData.element}
          </div>
          <div class="direction">
            <strong>üß≠ H∆∞·ªõng:</strong> ${houseData.direction}
          </div>
        </div>
      </div>

      <div class="directions">
        <h4>üß≠ H∆∞·ªõng May m·∫Øn C√° nh√¢n</h4>
        <div class="direction-grid">
          <div class="direction-item best">
            <strong>üéØ H∆∞·ªõng t·ªët nh·∫•t:</strong> ${directionalLuck.best}
          </div>
          <div class="direction-item good">
            <strong>üëç H∆∞·ªõng t·ªët:</strong> ${directionalLuck.good.join(', ')}
          </div>
          <div class="direction-item avoid">
            <strong>‚ùå N√™n tr√°nh:</strong> ${directionalLuck.avoid}
          </div>
        </div>
      </div>

      <div class="feng-shui-tips">
        <h4>üí° L·ªùi khuy√™n nhanh</h4>
        <ul>
          <li>ü™ë ƒê·∫∑t b√†n l√†m vi·ªác h∆∞·ªõng ${directionalLuck.best}</li>
          <li>üõèÔ∏è Gi∆∞·ªùng ng·ªß n√™n h∆∞·ªõng m·ªôt trong c√°c h∆∞·ªõng t·ªët</li>
          <li>üö´ Tr√°nh ng·ªìi quay l∆∞ng v·ªÅ h∆∞·ªõng ${directionalLuck.avoid}</li>
          <li>üé® S·ª≠ d·ª•ng c√°c m√†u may m·∫Øn trong trang tr√≠</li>
          <li>üîß √Åp d·ª•ng c√°c gi·∫£i ph√°p phong th·ªßy ƒë∆∞·ª£c ƒë·ªÅ xu·∫•t</li>
        </ul>
      </div>
    </div>
  `;
}

/**
 * Setup advanced tabs
 */
function setupAdvancedTabs() {
  const tabButtons = document.querySelectorAll('.tab-btn');
  const tabPanels = document.querySelectorAll('.tab-panel');
  
  tabButtons.forEach(button => {
    button.addEventListener('click', () => {
      const targetTab = button.dataset.tab;
      
      tabButtons.forEach(btn => btn.classList.remove('active'));
      tabPanels.forEach(panel => panel.classList.remove('active'));
      
      button.classList.add('active');
      const targetPanel = document.getElementById(`${targetTab}-panel`);
      if (targetPanel) {
        targetPanel.classList.add('active');
      }
    });
  });
}

/**
 * Initialize application
 */
function init() {
  const form = document.getElementById('numerologyForm');
  if (form) {
    form.addEventListener('submit', handleSubmit);
  }
  
  setupAccordion();
  setupOptionsToggle();
}

// Initialize when DOM is ready
if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', init);
} else {
  init();
}
